package com.qait.automation.tatoc;

import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.Cookie;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.Test;

import junit.framework.TestCase;

public class demoTest {
	
	WebDriver driver=new ChromeDriver();
	public demoTest() {
		System.setProperty("webdriver.chrome.driver","/home/qainfotech/Downloads/chromedriver");
	}
	@Test
	public void test() throws InterruptedException{
		driver.get("http://10.0.1.86/tatoc");
		Thread.sleep(1000);
		driver.findElement(By.linkText("Basic Course")).sendKeys(Keys.ENTER);
		//Thread.sleep(1000);
	}
	
	@Test(dependsOnMethods= {"test"})
	public void gridGate() throws InterruptedException {
		WebDriver driver=new ChromeDriver();
		driver.findElement(By.className("greenbox")).click();
		Thread.sleep(1000);
		}


/**
 * @throws InterruptedException ****************************************************************************************/
	@Test(dependsOnMethods= {"gridGate"})
public void frameDungeon() throws InterruptedException {
	WebDriver driver=new ChromeDriver();
		Thread.sleep(1000);
		driver.switchTo().frame("main");
		String qcolor=driver.findElement(By.id("answer")).getAttribute("class");
		
		String acolor;
			
		System.out.println(qcolor);
		while(true){
			driver.findElement(By.linkText("Repaint Box 2")).click();
			driver.switchTo().frame("child");
			acolor=driver.findElement(By.id("answer")).getAttribute("class");
			System.out.println(acolor);
			driver.switchTo().parentFrame();
			if(qcolor.equals(acolor)) {
				driver.findElement(By.linkText("Proceed")).click();
				break;
			}
			
		}
}
		
//*************************************************************************************************
	@Test(dependsOnMethods= {"frameDungeon"})
public void dragAround() throws InterruptedException {
	WebDriver driver=new ChromeDriver();
	driver.switchTo().defaultContent();
		//Element which needs to drag.    		
		Thread.sleep(1000);
		WebElement from=driver.findElement(By.id("dragbox"));
     
     //Element on which need to drop.		
     WebElement to=driver.findElement(By.id("dropbox"));					
     		
     //Using Action class for drag and drop.		
     Actions act=new Actions(driver);					

//Dragged and dropped.		
     act.dragAndDrop(from, to).build().perform();	
     driver.findElement(By.linkText("Proceed")).click();
     
}


//**********************************************************************************************


	@Test(dependsOnMethods= {"dragAround"})
public void popUp() throws InterruptedException {
	 WebDriver driver=new ChromeDriver();          
     driver.findElement(By.linkText("Launch Popup Window")).click();
     String parentWindow=driver.getWindowHandle();
     
     String subWindow=null;
     Set<String> handles=driver.getWindowHandles();
     for(String h:handles) {
    	 subWindow=h;
     }

     
     driver.switchTo().window(subWindow);
     System.out.println(driver.getCurrentUrl());
     Thread.sleep(2000);
     driver.findElement(By.id("name")).sendKeys("name");
     driver.findElement(By.id("submit")).click();
     
     driver.switchTo().window(parentWindow); 
     driver.findElement(By.linkText("Proceed")).click();

     Thread.sleep(1000);
     
}     
     //*********************************************************************************
	@Test(dependsOnMethods= {"popUp"})
public void cookie() {
	WebDriver driver=new ChromeDriver();
	driver.findElement(By.linkText("Generate Token")).click();
     
     String value=driver.findElement(By.id("token")).getText();
     
     System.out.println(value);
     Cookie ck=new Cookie("Token", value.substring(value.indexOf(":")+2));
     driver.manage().addCookie(ck);
     driver.findElement(By.linkText("Proceed")).click();

	}
}
